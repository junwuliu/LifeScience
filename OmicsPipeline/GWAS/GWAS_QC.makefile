## software
current_makefile := $(realpath $(lastword $(MAKEFILE_LIST)))
script_dir := $(dir $(current_makefile))
plink=/public/home/liujunwu/workdir/Omics/GWAS/software/plink/plink
Rscript=/public/software/R/bin/Rscript
python3=/public/home/liujunwu/software/miniconda3/envs/GWAS/bin/python3
gemma=/public/home/liujunwu/software/GEMMA-0.98.5/bin/gemma-0.98.5-linux-static-AMD64

## parameters
cpu=20
memory=30000 ##
work_dir=/public/home/liujunwu/workdir/Omics/GWAS/demo_data/easyGWAS_Data/1001_Genomes_data
QC_dir=$(work_dir)/QC
result_dir=$(work_dir)/GWAS
project_id=Ath_1001_Genomes
phenotype=/public/home/liujunwu/workdir/Omics/GWAS/demo_data/easyGWAS_Data/1001_Genomes_data/DTF1.pheno# 表型缺失时，记录为-9, 不能为nan
phenotype_name=DTF1
method=linear## or logistic ## linear 适用于连续性变量，如身高/体重/表达量，logistics适用于分类

check_sex=0## 0 is not to check, 1 is to check. Sex discrepancy depends on X chromosome
chr_sex=X## sex chromsome ID
check_hwe=1# 0 is not to check, 1 is to check. Hardy-Weinberg equilibrium, Target QC_4
maf_freq=0.05# A conventional MAF threshold for a regular GWAS is between 0.01 or 0.05, depending on sample size
#p_thesh=2.89e-08 ## pvalue theshold. usually 5e-8 / 1e-5 / 0.05
p_thesh=5e-8

##默认以群体PCA为协变量， 当需要指定条件为协变量时，需要更改covar文件内容并指定列

## benchmarks
#https://easygwas.biochem.mpg.de/gwas/myhistory/public/14

Converse:
	# convert ped to bed/fam/dim
	$(plink) --file $(project_id) --make-bed --out $(project_id)
	# convert bed/fam/dim to ped & map file
	$(plink) --bfile Ath_1001_Genomes_13 --recode --out Ath_1001_Genomes_13

QC_0:
	# 表型分布检测 
	

QC_1:
	mkdir -p $(QC_dir)
	# Investigate missingness per individual and per SNP and make histograms
	$(plink) --bfile $(work_dir)/$(project_id) --missing --out $(QC_dir)/plink --threads $(cpu)
	$(Rscript) --no-save $(script_dir)/hist_miss.R --dir $(QC_dir)
	# Delete SNPs and individuals with high levels of missingness, explanation of this and all following steps can be found in box 1 and table 1 of the article mentioned in the explanation of the main script.
	# Delete SNPs with missingness>0.2
	$(plink) --bfile $(work_dir)/$(project_id) --geno 0.2 --make-bed --out $(QC_dir)/$(project_id)_2 --threads $(cpu)
	# Delete individuals with missingness>0.2
	$(plink) --bfile $(QC_dir)/$(project_id)_2 --mind 0.2 --make-bed --out $(QC_dir)/$(project_id)_3 --threads $(cpu)
	# Delete SNPs with missingness>0.02
	$(plink) --bfile $(QC_dir)/$(project_id)_3 --geno 0.02 --make-bed --out $(QC_dir)/$(project_id)_4 --threads $(cpu)
	# Delete individuals with missingness>0.02
	$(plink) --bfile $(QC_dir)/$(project_id)_4 --mind 0.02 --make-bed --out $(QC_dir)/$(project_id)_5 --threads $(cpu)

QC_2:
	# Check for sex discrepancy
	# Subjects who were a priori determined as females must have a F value of <0.2, and subjects who were a priori determined as males must have a F value >0.8. This F value is based on the X chromosome inbreeding (homozygosity) estimate.
	# Subjects who do not fulfil these requirements are flagged "PROBLEM" by PLINK
	if [ $(check_sex) -gt 0 ] ;\
	then \
		$(plink) --bfile $(QC_dir)/$(project_id)_5 --check-sex --out $(QC_dir)/$(plink) --threads $(cpu) ;\
		$(Rscript) --no-save gender_check.R --dir $(QC_dir) ;\
		grep "PROBLEM" $(QC_dir)/plink.sexcheck| awk '{print $$1,$$2}'> $(QC_dir)/sex_discrepancy.txt ;\
		$(plink) --bfile $(QC_dir)/$(project_id)_5 --remove $(QC_dir)/sex_discrepancy.txt --make-bed --out $(QC_dir)/$(project_id)_6 --threads $(cpu) ;\
	else \
		ln -snf $(QC_dir)/$(project_id)_5.bed $(QC_dir)/$(project_id)_6.bed ;\
		ln -snf $(QC_dir)/$(project_id)_5.bim $(QC_dir)/$(project_id)_6.bim ;\
		ln -snf $(QC_dir)/$(project_id)_5.fam $(QC_dir)/$(project_id)_6.fam ;\
	fi


QC_3:
	#Generate bfile with autosomal SNPs only and delete SNPs with a low minor allele frequency (MAF).
	# Select autosomal SNPs only (i.e., from chromosomes 1 to 22)
	grep -v "$(chr_sex)" $(QC_dir)/$(project_id)_6.bim |awk '{print $$2}' > $(QC_dir)/snp_autosomal.txt
	$(plink) --bfile $(QC_dir)/$(project_id)_6 --extract $(QC_dir)/snp_autosomal.txt --make-bed --out $(QC_dir)/$(project_id)_7
	# make a plot of the minor allele frequency (MAF) distribution
	$(plink) --bfile $(QC_dir)/$(project_id)_7 --freq --out $(QC_dir)/MAF_check
	$(Rscript) --no-save $(script_dir)/MAF_check.R --dir $(QC_dir)
	# remove SNPs with a low MAF frequency
	$(plink) --bfile $(QC_dir)/$(project_id)_7 --maf $(maf_freq) --make-bed --out $(QC_dir)/$(project_id)_8

QC_4:
	# Delete SNPs which are not in Hardy-Weinberg equilibrium (HWE).
	# Check distribution HWE p-values of all SNPs
	$(plink) --bfile $(QC_dir)/$(project_id)_8 --hardy --out $(QC_dir)/plink
	# Selecting SNPs with HWE p-value below 0.00001, required for one of the two plot generated by the next Rscript, allows to zoom in on strongly deviating SNPs 
	awk '{ if ($$9 <0.00001) print $$0 }' $(QC_dir)/plink.hwe > $(QC_dir)/plinkzoomhwe.hwe
	$(Rscript) --no-save $(script_dir)/hwe.R --dir $(QC_dir) ;\
	# By default the --hwe option in $(plink) only filters for controls.
	# Therefore, we use two steps, first we use a stringent HWE threshold for controls followed by a less stringent threshold for the case data
	# The HWE threshold for the cases filters out only SNPs which deviate extremely from HWE
	# This second HWE step only focusses on cases because in the controls all SNPs with a HWE p-value < hwe 1e-6 were already removed 
	if [ $(check_hwe) -gt 0 ] ;\
	then \
		$(plink) --bfile $(QC_dir)/$(project_id)_8 --hwe 1e-6 --make-bed --out $(QC_dir)/$(project_id)_hwe_filter_step1 ;\
		$(plink) --bfile $(QC_dir)/$(project_id)_hwe_filter_step1 --hwe 1e-10 --hwe-all --make-bed --out $(QC_dir)/$(project_id)_9 ;\
	else \
		ln -snf $(QC_dir)/$(project_id)_8.bed $(QC_dir)/$(project_id)_9.bed ;\
		ln -snf $(QC_dir)/$(project_id)_8.bim $(QC_dir)/$(project_id)_9.bim ;\
		ln -snf $(QC_dir)/$(project_id)_8.fam $(QC_dir)/$(project_id)_9.fam ;\
	fi
QC_5:
	#Generate a plot of the distribution of the heterozygosity rate of your subjects.
	# And remove individuals with a heterozygosity rate deviating more than 3 sd from the mean
	# Checks for heterozygosity are performed on a set of SNPs which are not highly correlated.
	# Therefore, to generate a list of non-(highly)correlated SNPs, we exclude high inversion regions (inversion.txt [High LD regions]) and prune the SNPs using the command --indep-pairwise
	# The parameters �50 5 0.2� stand for the window size, the number of SNPs to shift the window at each step and the multiple correlation coefficient for a SNP being regressed on all other SNPs simultaneously
	#
	#$(plink) --bfile $(QC_dir)/$(project_id)_9 --exclude inversion.txt --range --indep-pairwise 50 5 0.2 --out indepSNP
	$(plink) --bfile $(QC_dir)/$(project_id)_9 --indep-pairwise 50 5 0.2 --out $(QC_dir)/indepSNP
	$(plink) --bfile $(QC_dir)/$(project_id)_9 --extract $(QC_dir)/indepSNP.prune.in --het --out $(QC_dir)/R_check
	$(Rscript) --no-save $(script_dir)/check_heterozygosity_rate.R --dir $(QC_dir)
	$(Rscript) --no-save $(script_dir)/heterozygosity_outliers_list.R --dir $(QC_dir)
	sed 's/"// g' $(QC_dir)/fail-het-qc.txt | awk '{print $$1, $$2}'> $(QC_dir)/het_fail_ind.txt
	$(plink) --bfile $(QC_dir)/$(project_id)_9 --remove $(QC_dir)/het_fail_ind.txt --make-bed --out $(QC_dir)/$(project_id)_10
	
QC_6:
	# 检测样本中是否有亲缘关系
	# It is essential to check in all datasets for cryptic relatedness
	# Assuming a random population sample we have excluded all individuals above the pihat threshold of 0.2.
	$(plink) --bfile $(QC_dir)/$(project_id)_10 --extract $(QC_dir)/indepSNP.prune.in --genome --min 0.2 --out $(QC_dir)/pihat_min0.2
	awk '{ if ($$8 >0.9) print $$0 }' $(QC_dir)/pihat_min0.2.genome > $(QC_dir)/zoom_pihat.genome
	if [ `wc -l $(QC_dir)/zoom_pihat.genome` -gt 1 ] ;\
	then \
		$(Rscript) --no-save $(script_dir)/Relatedness.R --dir $(QC_dir) ;\
	else \
		echo "No relatedness found" ;\
	fi
	$(plink) --bfile $(QC_dir)/$(project_id)_10 --filter-founders --make-bed --out $(QC_dir)/$(project_id)_11
	$(plink) --bfile $(QC_dir)/$(project_id)_11 --extract $(QC_dir)/indepSNP.prune.in --genome --min 0.2 --out $(QC_dir)/pihat_min0.2_in_founders
	$(plink) --bfile $(QC_dir)/$(project_id)_11 --missing --out $(QC_dir)/$(project_id)_11
	sed 1d $(QC_dir)/pihat_min0.2_in_founders.genome |awk '{print $$1,$$2}' >  $(QC_dir)/0.2_low_call_rate_pihat.txt
	$(plink) --bfile $(QC_dir)/$(project_id)_11 --remove $(QC_dir)/0.2_low_call_rate_pihat.txt --make-bed --out $(QC_dir)/$(project_id)_12

QC_PCA:
	## PCA 查看样本是否出现多个群体, 如出现则每个群体应单独进行GWAS
	$(plink) --bfile $(work_dir)/$(project_id) --pca 10 --out $(work_dir)/$(project_id)_pca --threads $(cpu)
	$(python3) $(script_dir)/PlotPCA.py -i $(work_dir)/$(project_id)_pca.eigenvec -o $(work_dir)/$(project_id)_pca.png
	$(plink) --bfile $(QC_dir)/$(project_id)_12 --pca 10 --out $(QC_dir)/$(project_id)_12_pca --threads $(cpu)
	$(python3) $(script_dir)/PlotPCA.py -i $(QC_dir)/$(project_id)_12_pca.eigenvec -o $(QC_dir)/$(project_id)_12_pca.png
	
GWAS_Analysis:
	mkdir -p $(result_dir)
	# --assoc 不允许有协变量 --logistic 质量性状(1/2, case/control); --linear 线性,数量性状 --adjust 产生多个校正值
	sed "s%nan%-9%g" $(phenotype) > $(phenotype).bak
	$(plink) --bfile $(QC_dir)/$(project_id)_12 --pca 10 --out $(result_dir)/$(project_id)_12_pca --threads $(cpu)
	$(plink) --bfile $(QC_dir)/$(project_id)_12 --make-bed --pheno $(phenotype).bak --pheno-name $(phenotype_name) --covar $(result_dir)/$(project_id)_12_pca.eigenvec --covar-number 1,2 --out $(result_dir)/$(project_id)_13
	$(plink) --bfile $(QC_dir)/$(project_id)_13 --extract $(QC_dir)/indepSNP.prune.in --genome --out $(result_dir)/$(project_id)_13
	$(plink) --bfile $(result_dir)/$(project_id)_13 --read-genome $(result_dir)/$(project_id)_13.genome --cluster --mds-plot 2 --out $(result_dir)/$(project_id)_12_mds
	## 检测结果
	# 用PCA的结果作为covar
	$(plink) --bfile $(QC_dir)/$(project_id)_12 --pheno $(phenotype).bak --pheno-name $(phenotype_name) --covar $(result_dir)/$(project_id)_12_pca.eigenvec --$(method) hide-covar --out $(result_dir)/$(method)_pca_results --allow-no-sex --adjust
	# 用MDS的结果作为covar
	awk '{print $$1, $$2, $$4, $$5, $$6, $$7, $$8, $$9, $$10, $$11, $$12, $$13}' $(result_dir)/$(project_id)_12_mds.mds > $(result_dir)/covar_mds.txt
	#awk '{print $$1, $$2, $$4, $$5}' $(result_dir)/$(project_id)_13.mds > $(result_dir)/covar_mds.txt
	#$(plink) --bfile $(result_dir)/$(project_id)_13 --pheno $(phenotype).bak --pheno-name $(phenotype_name) --covar $(result_dir)/covar_mds.txt --$(method) hide-covar --out $(result_dir)/$(method)_results --allow-no-sex --adjust
	$(python3) $(script_dir)/Join_files.py -i1 $(result_dir)/$(method)_pca_results.assoc.$(method) -i2 $(result_dir)/$(method)_pca_results.assoc.$(method).adjusted -o $(result_dir)/$(method)_pca_results.joint.txt
	#awk 'BEGIN{FS="\t";OFS="\t"}{print ($$2,$$1,$$3,$$16)}' $(result_dir)/$(method)_results.joint.txt > $(result_dir)/$(method)_results.CMplot.txt
	$(Rscript) $(script_dir)/Manhattan_plot.R --input $(result_dir)/$(method)_pca_results.joint.txt --project $(project_id)_pca --select_name CHR,SNP,BP,BONF --threshold $(p_thesh)
	

## result validation 
Check:
	$(plink) --bfile $(project_id)_13 --recode --out $(project_id)_13
	## test HW balance,显著偏离 HWE 的 SNP 可能存在问题，需要进一步检查或删除。
	$(plink) --file $(project_id)_13 --hardy --out $(result_dir)/hwe_results
	## 检查 MAF：确保每个 SNP 的 MAF 在可接受范围内（通常大于 1%）maf_results.frq
	$(plink) --file $(project_id)_13 --freq --out $(result_dir)/maf_results


GEMMA:
	mkdir -p $(result_dir)/GEMMA
	awk -F '{print $3}' $(phenotype) > $(result_dir)/GEMMA/pheno.txt
	$(gemma) -bfile $(result_dir)/$(project_id)_13 -gk 2 -p $(result_dir)/GEMMA/pheno.txt -outdir $(result_dir)/GEMMA/ -o $(project)
	$(gemma) -bfile $(result_dir)/$(project_id)_13 -k $(result_dir)/GEMMA/$(project).sXX.txt -lmm 4 -p $(result_dir)/GEMMA/pheno.txt -outdir $(result_dir)/GEMMA/ -o $(project)
	$(Rscript) $(script_dir)/Manhattan_plot.R --input $(result_dir)/$(project).assoc.txt --project GEMMA.$(project) --select_name  chr,rs,ps,p_wald --threshold $(p_thesh)

TEST:
	
	ln -snf $(QC_dir)/$(project_id)_12_pca.eigenvec $(result_dir)/PCA_covar.txt
	$(plink) --bfile Ath_1001_Genomes_12 --make-bed --pheno ../DTF1.pheno --mpheno 1 --covar covar.txt --covar-number 1,2 --out Ath_1001_Genomes_13
	$(plink) --bfile Ath_1001_Genomes_13 --extract indepSNP.prune.in --genome --out Ath_1001_Genomes_13
	$(plink) --bfile Ath_1001_Genomes_13 --read-genome Ath_1001_Genomes_13.genome --cluster --mds-plot 10 --out  Ath_1001_Genomes_13_mds
	awk '{print$1, $2, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13}' Ath_1001_Genomes_13_mds.mds > covar_mds.txt
	/(plink) --bfile Ath_1001_Genomes_13 --covar covar_mds.txt --linear hide-covar --out logistic_results
